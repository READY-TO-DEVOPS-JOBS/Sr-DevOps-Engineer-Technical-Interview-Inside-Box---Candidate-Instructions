# Use the official NGINX image as a base
FROM nginx:latest

# Copy custom index.html file to NGINX html directory
COPY index.html /usr/share/nginx/html/index.html

# Expose port 80
EXPOSE 80


Explanation:
FROM nginx
:

This line specifies that we're basing our image on the latest NGINX image available on Docker Hub.
COPY index.html /usr/share/nginx/html/index.html:

Copies the index.html file from your local directory into the NGINX default HTML directory (/usr/share/nginx/html/).
EXPOSE 80:

Opens port 80, which is the default port for HTTP traffic in NGINX.
Steps to Use:
Create index.html:

Create an index.html file in the same directory as your Dockerfile. You can put any HTML content you want in this file.
Example index.html:

<!DOCTYPE html>
<html>
<head>
    <title>Hello Docker NGINX</title>
</head>
<body>
    <h1>Hello from Docker NGINX!</h1>
    <p>This NGINX container has been customized.</p>
</body>
</html>


Build the Docker image:

Open a terminal or command prompt, navigate to the directory containing your Dockerfile and index.html, and run the following command:
bash
Copy code
docker build -t custom-nginx .
This command builds the Docker image with the tag custom-nginx.
Verify the image:

After the build completes, verify that the image was created successfully by running:
bash
Copy code
docker images
You should see your custom-nginx image listed.
Run a container from the custom image:

Now you can run a container from your custom NGINX image:
bash
Copy code
docker run -d -p 8080:80 custom-nginx
This command starts a container in detached mode (-d) and maps port 8080 on your host to port 80 inside the container (-p 8080:80).
Access the modified NGINX server:

Open a web browser and go to http://localhost:8080 to see the modified index.html served by your custom NGINX container.
Notes:
You can modify the index.html file or add other files as needed before building the Docker image.
This example demonstrates a basic customization of the NGINX image. For more advanced configurations, you can extend this Dockerfile to include additional NGINX configuration files or install additional packages.






